{"version":3,"sources":["utils/getSelectedZoneObj.ts","utils/getProperDisplayName.ts","utils/getZoneStatusProps.ts","types/zone.ts","utils/getParents.ts","utils/getLanguage.ts","assets/images/virus-small.svg","assets/images/virus-big.svg","assets/images/hand.svg","utils/lazyPreload.tsx","components/Layout.tsx","components/Search/SearchInput.tsx","components/Search/ZoneStatusPin.tsx","components/Search/SearchOption.tsx","components/Search/SearchOptionsPaper.tsx","components/Search/ListboxComponent.tsx","components/Search/SuggestedZones.tsx","utils/sortBasedOnTotalInfected.ts","components/Search/index.tsx","components/Banners/CallBanner.tsx","components/Banners/WelcomeBanner.tsx","components/ChildZonesTable/ChildZones.tsx","utils/getChildZones.ts","components/Map/Controlls.tsx","utils/getLatLngFromBBox.ts","components/Map/index.tsx","screens/User.tsx","api/zones.ts"],"names":["getSelectedZoneObjById","id","zones","find","zone","_id","getProperDisplayName","displayName","getLanguage","properties","displayNameUz","displayNameRu","getZoneStatusProps","status","t","textColorInWhite","textColorInBlue","text","bgColor","ZoneStatus","DANGEROUS","RISKY","SAFE","textInWhiteBg","textInBlueishBg","PlaceType","getParents","parentZoneList","parentZone","z","push","join","i18n","language","window","localStorage","i18nextLng","module","exports","lazyPreload","factory","Component","React","lazy","preload","useStyles","makeStyles","theme","root","display","drawer","flexShrink","width","maxWidth","drawerPaper","boxShadow","bottomSheetPaper","borderTopLeftRadius","borderTopRightRadius","backgroundColor","fontSize","padding","notch","position","top","left","transform","height","background","borderRadius","Layout","props","useState","isBottomSheetOpen","setIsBottomSheetOpen","classes","mdUp","useMediaQuery","breakpoints","up","map","mainContent","search","handleBottomSheetClose","Grid","container","Drawer","className","variant","paper","anchor","style","autoHide","Box","pt","pb","pl","pr","mb","cloneElement","isInsidePaper","flexGrow","zIndex","paddingTop","paddingLeft","paddingRight","closeBottomSheet","overflowHeight","shadowTip","topShadow","overlay","open","onChange","isOpen","Paper","elevation","inputContainer","alignItems","input","marginLeft","spacing","fontWeight","autoLocate","autoLocateIcon","SearchInput","handleAutoLocate","InputProps","InputLabelProps","inputRef","otherProps","useTheme","useTranslation","ref","component","InputBase","placeholder","statusColor","boxStyle","SearchOption","parentZonesString","direction","wrap","marginTop","mr","item","Typography","noWrap","lineHeight","color","SearchOptionsPaper","children","renderRow","data","index","OuterElementContext","createContext","OuterElementType","forwardRef","outerProps","useContext","ListboxComponent","other","itemData","Children","toArray","itemCount","length","getChildSize","child","isValidElement","type","ListSubheader","gridRef","useRef","useEffect","current","resetAfterIndex","useResetCache","Provider","value","reduce","a","b","outerElementType","innerElementType","itemSize","overscanCount","suggestedZoneContainer","suggestedZones","textTransform","whiteSpace","suggestedZonesWeb","suggestedZonesMobile","SuggestedZones","selectZone","lastSelectedZone","setLastSelectedZone","lastSelectedZoneLS","getItem","JSON","parse","error","settings","infinite","variableWidth","dots","speed","arrows","handleSuggestionsClick","key","Button","startIcon","onClick","acceptedZoneTypes","sort","total","infectedNumber","filter","includes","placeType","sortBasedOnTotalInfected","CITY","REGION","ml","optionContainerPaper","option","Search","StateContext","dispatch","navigateTo","selectedZone","setSelectedZone","ADD_SELECTED_ZONE_ID","payload","blur","palette","lat","lng","Autocomplete","options","getOptionSelected","getOptionLabel","event","reason","setItem","stringify","onFocus","filterOptions","state","i","alias","some","toLowerCase","inputValue","renderInput","params","renderOption","PaperComponent","autoHighlight","autoComplete","clearOnEscape","clearOnBlur","createStyles","primary","main","overflow","flex","textMain","textSecondary","opacity","textSecondaryMobile","imgStyleMobile","bottom","CallBanner","smUp","mt","cursor","justify","src","VirusSmall","undefined","papar","caption","backgroundVirusImg","right","WelcomeBanner","callBannerClasses","useCallBannerStyles","VirusBig","alt","xs","sm","md","Hand","table","showMoreBtn","marginRight","tableCell","textAlign","textOverflow","tableCellText","skeleton","ChildZones","withStyles","borderBottom","leftmost","rightmost","MuiTableCell","selectedZoneId","numberOfVisibleCells","setNumberOfVisibleCells","defaultZone","indexOf","console","log","childZones","getChildZones","Link","textIndent","recoveredNumber","deadNumber","Controlls","zoomIn","L","DomUtil","create","zoomOut","title","innerHTML","margin","fontFamily","onmouseover","onmouseout","onclick","appendChild","getLatLngFromBBox","bbox","minLng","minLat","maxLng","mapOptions","renderer","canvas","zoomControl","zoomSnap","zoomDelta","minZoom","MapTest","geoJson","selectedLayer","layerStyle","fillColor","fillOpacity","isHighlighted","highlightLayer","layer","feature","setStyle","filterZonesOnZoom","eachLayer","isShown","zoneZoomLevel","latLng","getBoundsZoom","parentZoomLevel","zoom","getZoom","getBounds","overlaps","isLayerVisible","addLayer","removeLayer","layerOptions","attribution","edgeBufferTiles","tileLayer","addTo","setView","controls","Control","extend","onAdd","addControl","remove","off","geoJSON","feat","weight","onEachFeature","openPopupTimer","on","click","e","resetStyle","target","openPopup","mouseover","setTimeout","mouseout","clearTimeout","dehighlightLayer","bindPopup","getCenter","queryParam","URLSearchParams","location","set","toString","newRelativePathQuery","pathname","history","pushState","flyToBounds","SelectedZoneName","OverallStat","Graph","Restrictions","User","process","Axios","get","fetchZones","then","res","ADD_ZONES","CssBaseline","Map","fallback"],"mappings":"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","file":"static/js/User.4c9e1421.chunk.js","sourcesContent":["import { Zone } from \"../types/zone\";\r\n\r\nexport const getSelectedZoneObjById = (id: string, zones: Zone[] = []) => {\r\n  return zones.find((zone) => zone._id === id);\r\n};\r\n","import { Zone } from \"../types/zone\";\r\nimport { getLanguage } from \"./getLanguage\";\r\n\r\nexport const getProperDisplayName = (zone: Zone) => {\r\n  let displayName: string;\r\n  switch (getLanguage()) {\r\n    case \"uz\":\r\n      displayName = zone?.properties?.displayNameUz;\r\n      break;\r\n    case \"ru\":\r\n      displayName = zone?.properties?.displayNameRu;\r\n      break;\r\n    default:\r\n      displayName = zone?.properties?.displayNameUz;\r\n      break;\r\n  }\r\n  return displayName;\r\n};\r\n","import { ZoneStatus } from \"../types/zone\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { TFunction } from \"i18next\";\r\n\r\nconst getZoneStatusProps = (status: ZoneStatus, t?: TFunction) => {\r\n  let textColorInWhite: string = \"\",\r\n    textColorInBlue: string = \"\",\r\n    text: string | undefined = \"\",\r\n    bgColor: string = \"\";\r\n  switch (status) {\r\n    case ZoneStatus.DANGEROUS:\r\n      textColorInWhite = \"#EA5C73\";\r\n      textColorInBlue = \"#FF4967\";\r\n      text = t && t(\"selectedZoneName.statusBadge.dangerous\");\r\n      bgColor = \"#ff0c0c26\";\r\n      break;\r\n    case ZoneStatus.RISKY:\r\n      textColorInWhite = \"#EF7C38\";\r\n      textColorInBlue = \"#FF9635\";\r\n      text = t && t(\"selectedZoneName.statusBadge.warning\");\r\n      bgColor = \"#ffeb0159\";\r\n      break;\r\n    case ZoneStatus.SAFE:\r\n      textColorInWhite = \"#87D03F\";\r\n      textColorInBlue = \"#87D03F\";\r\n      text = t && t(\"selectedZoneName.statusBadge.safe\");\r\n      bgColor = \"#8ff8293d\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return {\r\n    textInWhiteBg: textColorInWhite,\r\n    textInBlueishBg: textColorInBlue,\r\n    text: text,\r\n    bgColor: bgColor,\r\n  };\r\n};\r\n\r\nexport default getZoneStatusProps;\r\n","import { BBox } from \"@turf/turf\";\r\n\r\nexport enum ZoneStatus {\r\n  DANGEROUS = \"DANGEROUS\",\r\n  RISKY = \"RISKY\",\r\n  SAFE = \"SAFE\",\r\n}\r\n\r\nexport enum PlaceType {\r\n  DISTRICT = \"DISTRICT\",\r\n  CITY = \"CITY\",\r\n  REGION = \"REGION\",\r\n  COUNTRY = \"COUNTRY\",\r\n}\r\n\r\nexport type Total = {\r\n  infectedNumber: number;\r\n  recoveredNumber: number;\r\n  deadNumber: number;\r\n};\r\nexport type History = {\r\n  _id: string;\r\n  infectedNumber: number;\r\n  recoveredNumber: number;\r\n  deadNumber: number;\r\n  date: Date;\r\n};\r\n\r\nexport type Zone = {\r\n  _id: string;\r\n  type:\r\n    | \"FeatureCollection\"\r\n    | \"Feature\"\r\n    | \"GeometryCollection\"\r\n    | \"Point\"\r\n    | \"MultiPoint\"\r\n    | \"LineString\"\r\n    | \"MultiLineString\"\r\n    | \"Polygon\"\r\n    | \"MultiPolygon\";\r\n  properties: {\r\n    displayName: string;\r\n    displayNameUz: string;\r\n    displayNameRu: string;\r\n    alias: string[];\r\n    parentZone: string;\r\n    childZones: string[];\r\n    placeType: PlaceType;\r\n    status: ZoneStatus;\r\n    total: Total;\r\n    history: History[];\r\n    restrictionsUz: any;\r\n    restrictionsRu: any;\r\n  };\r\n  bbox: [number, number, number, number];\r\n  geometry: {\r\n    type:\r\n      | \"FeatureCollection\"\r\n      | \"Feature\"\r\n      | \"GeometryCollection\"\r\n      | \"Point\"\r\n      | \"MultiPoint\"\r\n      | \"LineString\"\r\n      | \"MultiLineString\"\r\n      | \"Polygon\"\r\n      | \"MultiPolygon\";\r\n    coordinates: [];\r\n  };\r\n};\r\n","import { Zone } from \"../types/zone\";\r\nimport { getLanguage } from \"./getLanguage\";\r\nimport { getProperDisplayName } from \"./getProperDisplayName\";\r\n\r\nexport const getParents = (\r\n  zone: Zone,\r\n  zones: Zone[],\r\n  parentZoneList: string[] = []\r\n): string => {\r\n  const parentZone = zones.find(\r\n    (z) => z.properties?.displayName === zone.properties?.parentZone\r\n  );\r\n  if (parentZone) {\r\n    parentZoneList.push(getProperDisplayName(parentZone));\r\n    return getParents(parentZone, zones, parentZoneList);\r\n  } else {\r\n    return parentZoneList.join(\", \");\r\n  }\r\n};\r\n","import i18n from \"i18next\";\r\n\r\nexport const getLanguage = () => {\r\n  return (\r\n    i18n.language ||\r\n    (typeof window !== \"undefined\" && window.localStorage.i18nextLng) ||\r\n    \"uz\"\r\n  );\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/virus-small.970e315a.svg\";","module.exports = __webpack_public_path__ + \"static/media/virus-big.f78fcd20.svg\";","module.exports = __webpack_public_path__ + \"static/media/hand.47246aac.svg\";","import React from \"react\";\r\n\r\nexport const lazyPreload = (\r\n  factory: () => Promise<{ default: React.SFC<any> }>\r\n) => {\r\n  const Component: any = React.lazy(factory);\r\n  Component.preload = factory;\r\n  return Component;\r\n};\r\n","import React, { useState, ReactElement } from \"react\";\nimport {\n  makeStyles,\n  Drawer,\n  Grid,\n  Box,\n  useMediaQuery,\n  Theme,\n  Paper,\n} from \"@material-ui/core\";\nimport SwipeableBottomSheet from \"react-swipeable-bottom-sheet\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\n\nexport interface LayoutProps {\n  map: ReactElement;\n  mainContent: ReactElement;\n  search: ReactElement;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  drawer: {\n    flexShrink: 0,\n    width: \"50%\",\n    maxWidth: 600,\n  },\n  drawerPaper: {\n    width: \"50%\",\n    maxWidth: 600,\n    boxShadow: '0px 4px 40px rgba(0, 30, 89, 0.09)',\n  },\n  bottomSheetPaper: {\n    borderTopLeftRadius: \"30px\",\n    borderTopRightRadius: \"30px\",\n    backgroundColor: \"white\",\n    fontSize: \"18px\",\n    padding: \"30px 20px\",\n    // minHeight: \"calc(100vh - 160px)\",\n    // maxHeight: 'calc(100vh - 160px)',\n  },\n  notch: {\n    position: \"absolute\",\n    top: 12.5,\n    left: \"50%\",\n    transform: \"translateX(-50%)\",\n    width: 37,\n    height: 5,\n    background: \"#E3E3E3\",\n    borderRadius: 9,\n  },\n}));\n\nconst Layout: React.SFC<LayoutProps> = (props) => {\n  const [isBottomSheetOpen, setIsBottomSheetOpen] = useState(false);\n  const classes = useStyles();\n  const mdUp = useMediaQuery((theme: Theme) => theme.breakpoints.up(\"md\"));\n  const { map, mainContent, search } = props;\n\n  const handleSwipeableChange = (isOpen: boolean) =>\n    setIsBottomSheetOpen(isOpen);\n\n  const handleBottomSheetClose = () => setIsBottomSheetOpen(false);\n\n  return (\n    <>\n      {mdUp ? (\n        <Grid container>\n          <Drawer\n            className={`${classes.drawer}`}\n            variant=\"permanent\"\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            anchor=\"left\"\n          >\n            <Scrollbars style={{ padding: \"32px 40px\" }} autoHide>\n              <Box pt={4} pb={4} pl={5} pr={5}>\n                <Box mb={3}>\n                  {React.cloneElement(search, { isInsidePaper: true })}\n                </Box>\n                {mainContent}\n              </Box>\n            </Scrollbars>\n          </Drawer>\n          <Box height={\"100vh\"} flexGrow={1} zIndex={1}>\n            {map}\n          </Box>\n        </Grid>\n      ) : (\n        <>\n          <Grid container>\n            <Box\n              position=\"absolute\"\n              width={\"100%\"}\n              paddingTop={\"8px\"}\n              paddingLeft={\"8px\"}\n              paddingRight={\"8px\"}\n              zIndex={100}\n            >\n              {React.cloneElement(search, {\n                isInsidePaper: false,\n                closeBottomSheet: handleBottomSheetClose,\n              })}\n            </Box>\n            <Box height={\"calc(100vh - 190px)\"} flexGrow={1} zIndex={1}>\n              {React.cloneElement(map, {\n                closeBottomSheet: handleBottomSheetClose,\n              })}\n            </Box>\n            <Box zIndex={100}>\n              <SwipeableBottomSheet\n                overflowHeight={200}\n                shadowTip={false}\n                topShadow={false}\n                overlay={false}\n                open={isBottomSheetOpen}\n                onChange={handleSwipeableChange}\n              >\n                <Paper elevation={11} className={classes.bottomSheetPaper}>\n                  {/* <Scrollbars style={{ padding: \"30px 20px\", }} autoHide> */}\n                  <Box className={classes.notch}></Box>\n                  <Box>{mainContent}</Box>\n                  {/* </Scrollbars> */}\n                </Paper>\n              </SwipeableBottomSheet>\n            </Box>\n          </Grid>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport {\n  Paper,\n  InputBase,\n  makeStyles,\n  useTheme,\n  PaperProps,\n  Button,\n  IconButton,\n} from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport NavigationRoundedIcon from \"@material-ui/icons/NavigationRounded\";\nimport { useTranslation } from \"react-i18next\";\n\nexport interface SearchInputProps {\n  InputProps: {\n    ref: any;\n  };\n  InputLabelProps: any;\n  inputRef: any;\n  bgColor: string;\n  boxShadow: string;\n  elevation: PaperProps[\"elevation\"];\n  handleAutoLocate: (lat: number, lng: number) => void;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  inputContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    height: 48,\n    borderRadius: 24,\n    paddingLeft: 16,\n    paddingRight: 16,\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    fontWeight: 400,\n  },\n  autoLocate: {\n    boxShadow: \"0px 4px 10px rgba(27, 41, 83, 0.24)\",\n    height: \"30px\",\n    width: \"30px\",\n    backgroundColor: \"white\",\n  },\n  autoLocateIcon: {\n    transform: \"rotate(27deg) translateY(-1px)\",\n    fontSize: \"1rem\",\n  },\n}));\n\nconst SearchInput: React.SFC<SearchInputProps> = (props) => {\n  const {\n    handleAutoLocate,\n    InputProps,\n    InputLabelProps,\n    bgColor,\n    boxShadow,\n    elevation,\n    inputRef,\n    ...otherProps\n  } = props;\n  const theme = useTheme();\n  const classes = useStyles(theme);\n  const { t } = useTranslation();\n\n  const handleAutoLocateClick = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        function (position) {\n          handleAutoLocate(position.coords.latitude, position.coords.longitude);\n          // infoWindow.setPosition(pos);\n          // infoWindow.setContent('Location found.');\n          // infoWindow.open(map);\n          // map.setCenter(pos);\n        },\n        function () {\n          // handleLocationError(true, infoWindow, map.getCenter());\n        }\n      );\n    } else {\n      // Browser doesn't support Geolocation\n      // handleLocationError(false, infoWindow, map.getCenter());\n    }\n  };\n  return (\n    <Paper\n      ref={InputProps.ref}\n      component=\"form\"\n      className={classes.inputContainer}\n      style={{ backgroundColor: bgColor, boxShadow: boxShadow }}\n      elevation={elevation}\n    >\n      <SearchIcon />\n      <InputBase\n        {...otherProps}\n        className={classes.input}\n        placeholder={t('search.searchForCity')}\n        inputRef={inputRef}\n      />\n      {/* <IconButton\n        className={classes.autoLocate}\n        onClick={handleAutoLocateClick}\n      >\n        <NavigationRoundedIcon\n          color=\"primary\"\n          className={classes.autoLocateIcon}\n        />\n      </IconButton> */}\n    </Paper>\n  );\n};\n\nexport default SearchInput;\n","import * as React from \"react\";\r\nimport { Box, useTheme } from \"@material-ui/core\";\r\nimport { ZoneStatus } from \"../../types/zone\";\r\nimport getZoneStatusProps from \"../../utils/getZoneStatusProps\";\r\n\r\nexport interface ZoneStatusPinProps {\r\n  status: ZoneStatus;\r\n  style?: any\r\n}\r\n\r\nconst ZoneStatusPin: React.SFC<ZoneStatusPinProps> = (props) => {\r\n  const { status, style = {} } = props;\r\n\r\n  const statusColor = getZoneStatusProps(status);\r\n\r\n  const boxStyle = {\r\n    display: 'inline-block',\r\n    width: 8,\r\n    height: 8,\r\n    borderRadius: 4,\r\n    backgroundColor: statusColor?.textInWhiteBg,\r\n  };\r\n  return <Box style={{...boxStyle, ...style}} component=\"span\" />;\r\n};\r\n\r\nexport default React.memo(ZoneStatusPin, () => true);\r\n","import React from \"react\";\r\nimport ZoneStatusPin from \"./ZoneStatusPin\";\r\nimport { Typography, Box, Grid } from \"@material-ui/core\";\r\nimport { Zone } from \"../../types/zone\";\r\nimport { getParents } from \"../../utils/getParents\";\r\nimport { getProperDisplayName } from \"../../utils/getProperDisplayName\";\r\n\r\nexport interface SearchOptionProps extends Zone {}\r\nexport interface SearchOptionComponentProps {\r\n  zone: Zone;\r\n  zones: Zone[];\r\n}\r\n\r\nconst SearchOption: React.SFC<SearchOptionComponentProps> = (props) => {\r\n  const { zone, zones } = props;\r\n\r\n  const parentZonesString = getParents(zone, zones);\r\n  return (\r\n    <Grid container direction='row' wrap=\"nowrap\" alignItems=\"flex-start\" style={{height: '100%'}}>\r\n      <ZoneStatusPin status={zone?.properties?.status} style={{marginTop: 4, marginLeft: 8, width: 9}} />\r\n      <Box component=\"span\" mr={2} />\r\n      <Grid container item direction='column' wrap=\"nowrap\">\r\n        <Typography variant=\"body1\" noWrap style={{lineHeight: '20px'}}>\r\n          {getProperDisplayName(zone)}\r\n        </Typography>\r\n        {parentZonesString && (\r\n          <Typography variant=\"caption\" style={{lineHeight: '20px', color: '#A5A3B2'}}>{parentZonesString}</Typography>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SearchOption;\r\n","import React, { HTMLAttributes } from \"react\";\nimport { Paper, Typography } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\n\nconst SearchOptionsPaper: React.SFC<HTMLAttributes<HTMLElement>> = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Paper\n      className={props.className}\n      elevation={0}\n      style={{ boxShadow: \"0px 3px 10px rgba(30, 43, 114, 0.09)\" }}\n    >\n      <Typography variant=\"overline\" color=\"textSecondary\">\n        {t(\"search.searchResults\")}\n      </Typography>\n      {props.children}\n    </Paper>\n  );\n};\n\nexport default SearchOptionsPaper;\n","import React from \"react\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport { VariableSizeList, ListChildComponentProps } from \"react-window\";\r\n\r\nconst LISTBOX_PADDING = 8; // px\r\n\r\nfunction renderRow(props: ListChildComponentProps) {\r\n  const { data, index, style } = props;\r\n  return React.cloneElement(data[index], {\r\n    style: {\r\n      ...style,\r\n      top: (style.top as number) + LISTBOX_PADDING,\r\n    },\r\n  });\r\n}\r\n\r\nconst OuterElementContext = React.createContext({});\r\n\r\nconst OuterElementType = React.forwardRef<HTMLDivElement>((props, ref) => {\r\n  const outerProps = React.useContext(OuterElementContext);\r\n  return <div ref={ref} {...props} {...outerProps} />;\r\n});\r\n\r\nfunction useResetCache(data: any) {\r\n  const ref = React.useRef<VariableSizeList>(null);\r\n  React.useEffect(() => {\r\n    if (ref.current != null) {\r\n      ref.current.resetAfterIndex(0, true);\r\n    }\r\n  }, [data]);\r\n  return ref;\r\n}\r\n\r\n// Adapter for react-window\r\nconst ListboxComponent = React.forwardRef<HTMLDivElement>(\r\n  function ListboxComponent(props, ref) {\r\n    const { children, ...other } = props;\r\n    const itemData = React.Children.toArray(children);\r\n    const theme = useTheme();\r\n    const itemCount = itemData.length;\r\n    const itemSize = 56;\r\n\r\n    const getChildSize = (child: React.ReactNode) => {\r\n      if (React.isValidElement(child) && child.type === ListSubheader) {\r\n        return 56;\r\n      }\r\n\r\n      return itemSize;\r\n    };\r\n\r\n    const getHeight = () => {\r\n      if (itemCount > 5) {\r\n        return 5 * itemSize;\r\n      }\r\n      return itemData.map(getChildSize).reduce((a, b) => a + b, 0);\r\n    };\r\n\r\n    const gridRef = useResetCache(itemCount);\r\n\r\n    return (\r\n      <div ref={ref}>\r\n        <OuterElementContext.Provider value={other}>\r\n          <VariableSizeList\r\n            itemData={itemData}\r\n            height={getHeight() + 2 * LISTBOX_PADDING}\r\n            width=\"100%\"\r\n            ref={gridRef}\r\n            outerElementType={OuterElementType}\r\n            innerElementType=\"ul\"\r\n            itemSize={(index) => getChildSize(itemData[index])}\r\n            overscanCount={5}\r\n            itemCount={itemCount}\r\n          >\r\n            {renderRow}\r\n          </VariableSizeList>\r\n        </OuterElementContext.Provider>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default ListboxComponent;","import React, { useEffect, useState } from \"react\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  makeStyles,\r\n  useTheme,\r\n  useMediaQuery,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport { sortBasedOnTotalInfected } from \"utils/sortBasedOnTotalInfected\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport { PlaceType, Zone } from \"types/zone\";\r\nimport { getProperDisplayName } from \"utils/getProperDisplayName\";\r\nimport SuggestedZonesSkeleton from \"../Skeletons/SuggestedZones\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  suggestedZoneContainer: {\r\n    // marginTop: \"8px\",\r\n  },\r\n  suggestedZones: {\r\n    fontSize: \"14px\",\r\n    lineHeight: \"17px\",\r\n    padding: \"8px 16px 8px 16px\",\r\n    borderRadius: \"43px\",\r\n    textTransform: \"unset\",\r\n    whiteSpace: \"nowrap\",\r\n    fontWeight: 400,\r\n  },\r\n  suggestedZonesWeb: {\r\n    color: \"rgba(59, 56, 88, 0.72)\",\r\n    backgroundColor: \"#ebebebc7\",\r\n    boxShadow: \"none\",\r\n  },\r\n  suggestedZonesMobile: {\r\n    color: \"rgba(36, 43, 67, 0.77)\",\r\n    background: \"#FFFFFF\",\r\n    boxShadow: \"4px 6px 10px rgba(30, 43, 114, 0.09)\",\r\n  },\r\n}));\r\n\r\nexport interface SuggestedZonesProps {\r\n  zones: Zone[] | [];\r\n  selectZone: (zone: Zone) => void;\r\n}\r\n\r\nconst SuggestedZones: React.SFC<SuggestedZonesProps> = (props) => {\r\n  const { zones, selectZone } = props;\r\n  const [lastSelectedZone, setLastSelectedZone] = useState<Zone>();\r\n  const theme = useTheme();\r\n  const classes = useStyles(theme);\r\n  const mdUp = useMediaQuery((theme: Theme) => theme.breakpoints.up(\"md\"));\r\n\r\n  useEffect(() => {\r\n    const lastSelectedZoneLS = localStorage.getItem(\"last-selected-zone\") || \"\";\r\n    try {\r\n      setLastSelectedZone(JSON.parse(lastSelectedZoneLS));\r\n    } catch (error) {}\r\n  }, []);\r\n\r\n  const settings = {\r\n    infinite: false,\r\n    variableWidth: true,\r\n    dots: false,\r\n    speed: 300,\r\n    arrows: false,\r\n  };\r\n  const handleSuggestionsClick = (zone: Zone) => {\r\n    selectZone(zone);\r\n  };\r\n  return zones?.length > 0 ? (\r\n    <Slider {...settings}>\r\n      {lastSelectedZone ? (\r\n        <Box key={`suggestion-${lastSelectedZone._id}`} mr={0.5}>\r\n          <Button\r\n            variant=\"contained\"\r\n            className={`${classes.suggestedZones} ${\r\n              mdUp ? classes.suggestedZonesWeb : classes.suggestedZonesMobile\r\n            }`}\r\n            startIcon={<LocationOnIcon fontSize=\"small\" color={\"primary\"} />}\r\n            onClick={() => handleSuggestionsClick(lastSelectedZone)}\r\n          >\r\n            {getProperDisplayName(lastSelectedZone)}\r\n          </Button>\r\n        </Box>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {sortBasedOnTotalInfected(zones, [PlaceType.CITY, PlaceType.REGION]).map(\r\n        (zone, index) => {\r\n          return (\r\n            index <= 1 && (\r\n              <Box\r\n                key={`suggestion-${zone._id}`}\r\n                ml={index !== 0 ? 0.5 : 0}\r\n                mr={index !== zones.length - 1 ? 0.5 : 0}\r\n              >\r\n                <Button\r\n                  variant=\"contained\"\r\n                  className={`${classes.suggestedZones} ${\r\n                    mdUp\r\n                      ? classes.suggestedZonesWeb\r\n                      : classes.suggestedZonesMobile\r\n                  }`}\r\n                  startIcon={\r\n                    <LocationOnIcon fontSize=\"small\" color={\"primary\"} />\r\n                  }\r\n                  onClick={() => handleSuggestionsClick(zone)}\r\n                >\r\n                  {getProperDisplayName(zone)}\r\n                </Button>\r\n              </Box>\r\n            )\r\n          );\r\n        }\r\n      )}\r\n    </Slider>\r\n  ) : (\r\n    <SuggestedZonesSkeleton mdUp={mdUp} />\r\n  );\r\n};\r\n\r\nexport default SuggestedZones;\r\n","import { Zone, PlaceType } from \"../types/zone\";\r\n\r\nexport const sortBasedOnTotalInfected = (\r\n  zones: Zone[],\r\n  acceptedZoneTypes: PlaceType[]\r\n): Zone[] => {\r\n  return zones\r\n    .sort(\r\n      (a, b) =>\r\n        b?.properties?.total?.infectedNumber -\r\n        a?.properties?.total?.infectedNumber\r\n    )\r\n    .filter((zone) => acceptedZoneTypes.includes(zone?.properties?.placeType));\r\n};\r\n","import React, {\r\n  useContext,\r\n  useState,\r\n  PropsWithChildren,\r\n  ChangeEvent,\r\n  useRef,\r\n} from \"react\";\r\nimport { StateContext } from \"../../state/StateContext\";\r\nimport { makeStyles, useTheme, useMediaQuery, Theme } from \"@material-ui/core\";\r\nimport \"./styles.css\";\r\nimport Autocomplete, {\r\n  AutocompleteChangeReason,\r\n} from \"@material-ui/lab/Autocomplete\";\r\nimport { ADD_SELECTED_ZONE_ID } from \"../../state/reducers/appReducer\";\r\nimport SearchInput from \"./SearchInput\";\r\nimport SearchOption, { SearchOptionProps } from \"./SearchOption\";\r\nimport SearchOptionsPaper from \"./SearchOptionsPaper\";\r\nimport ListboxComponent from \"./ListboxComponent\";\r\nimport { Zone } from \"../../types/zone\";\r\nimport { FilterOptionsState } from \"@material-ui/lab\";\r\nimport { getProperDisplayName } from \"../../utils/getProperDisplayName\";\r\nimport SuggestedZones from \"components/Search/SuggestedZones\";\r\n\r\nexport interface SearchProps {\r\n  isInsidePaper?: boolean;\r\n  closeBottomSheet?: () => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  optionContainerPaper: {\r\n    borderRadius: 24,\r\n    marginTop: 8,\r\n    padding: 24,\r\n  },\r\n  option: {\r\n    padding: \"8px 0\",\r\n    height: 50,\r\n    '&[data-focus=\"true\"]': {\r\n      backgroundColor: \"rgba(0, 0, 0, .02)\",\r\n    },\r\n    // \":active\": {\r\n    //   backgroundColor: \"rgba(0, 0, 0, .02)\",\r\n    // },\r\n  },\r\n  suggestedZoneContainer: {\r\n    // marginTop: \"8px\",\r\n  },\r\n  suggestedZones: {\r\n    backgroundColor: \"rgba(72, 99, 244, 0.11)\",\r\n    color: \"rgba(59, 56, 88, 0.72)\",\r\n    fontSize: \"14px\",\r\n    lineHeight: \"17px\",\r\n    padding: \"8px 16px 8px 16px\",\r\n    boxShadow: \"none\",\r\n    borderRadius: \"20px\",\r\n    textTransform: \"unset\",\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n}));\r\n\r\nconst Search: React.SFC<SearchProps> = (props) => {\r\n  const mdUp = useMediaQuery((theme: Theme) => theme.breakpoints.up(\"md\"));\r\n  const { isInsidePaper, closeBottomSheet = () => {} } = props;\r\n  const { zones = [], dispatch, navigateTo } = useContext(StateContext);\r\n  const [selectedZone, setSelectedZone] = useState<Zone | null>(null);\r\n  const theme = useTheme();\r\n  const classes = useStyles(theme);\r\n  const inputRef = useRef<any>();\r\n\r\n  const selectZone = (zone: Zone) => {\r\n    dispatch({\r\n      type: ADD_SELECTED_ZONE_ID,\r\n      payload: zone._id,\r\n    });\r\n    closeBottomSheet();\r\n    setSelectedZone(zone);\r\n    inputRef.current?.blur();\r\n  };\r\n\r\n  const handleChange = (\r\n    event: ChangeEvent<{}>,\r\n    value: PropsWithChildren<SearchOptionProps> | null,\r\n    reason: AutocompleteChangeReason\r\n  ) => {\r\n    if (reason === \"select-option\" && value?._id) {\r\n      selectZone(value);\r\n      try {\r\n        localStorage.setItem(\"last-selected-zone\", JSON.stringify(value));\r\n      } catch (error) {}\r\n    }\r\n  };\r\n\r\n  const optionsToShow = (\r\n    option: PropsWithChildren<SearchOptionProps>[],\r\n    state: FilterOptionsState<PropsWithChildren<SearchOptionProps>>\r\n  ) => {\r\n    return option.filter((i) => {\r\n      return (\r\n        i?.properties?.alias?.some((a) =>\r\n          a?.toLowerCase().includes(state?.inputValue?.toLowerCase())\r\n        ) ||\r\n        i?.properties?.displayNameUz\r\n          ?.toLowerCase()\r\n          .includes(state?.inputValue?.toLowerCase()) ||\r\n        i?.properties?.displayNameRu\r\n          ?.toLowerCase()\r\n          .includes(state?.inputValue?.toLowerCase())\r\n      );\r\n    });\r\n  };\r\n\r\n  const bgColor = isInsidePaper\r\n    ? theme.palette.type === \"light\"\r\n      ? \"#ebebebc7\"\r\n      : \"#bdc0cb\"\r\n    : theme.palette.type === \"light\"\r\n    ? \"#FFF\"\r\n    : \"#bdc0cb\";\r\n  const elevation = isInsidePaper ? 0 : 2;\r\n\r\n  const handleAutoLocate = (lat: number, lng: number) => {\r\n    navigateTo({ lat, lng });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Autocomplete\r\n        // debug\r\n        id=\"search-bank-name\"\r\n        classes={{\r\n          option: classes.option,\r\n          paper: classes.optionContainerPaper,\r\n        }}\r\n        options={zones}\r\n        getOptionSelected={(option, value) => value?._id === option?._id}\r\n        getOptionLabel={(option: PropsWithChildren<SearchOptionProps>) =>\r\n          getProperDisplayName(option)\r\n        }\r\n        value={selectedZone}\r\n        onChange={handleChange}\r\n        onFocus={closeBottomSheet}\r\n        filterOptions={optionsToShow}\r\n        // popupIcon={null}\r\n        renderInput={(params) => (\r\n          <SearchInput\r\n            {...params}\r\n            bgColor={bgColor}\r\n            boxShadow={mdUp ? \"unset\" : \"4px 6px 10px rgba(30, 43, 114, 0.09)\"}\r\n            elevation={elevation}\r\n            inputRef={inputRef}\r\n            handleAutoLocate={handleAutoLocate}\r\n          />\r\n        )}\r\n        renderOption={(option) => <SearchOption zone={option} zones={zones} />}\r\n        PaperComponent={SearchOptionsPaper}\r\n        ListboxComponent={\r\n          ListboxComponent as React.ComponentType<\r\n            React.HTMLAttributes<HTMLElement>\r\n          >\r\n        }\r\n        autoHighlight\r\n        autoComplete\r\n        clearOnEscape\r\n        clearOnBlur\r\n      />\r\n      <SuggestedZones zones={zones} selectZone={selectZone} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  makeStyles,\r\n  Theme,\r\n  useTheme,\r\n  createStyles,\r\n  Box,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport VirusSmall from \"../../assets/images/virus-small.svg\";\r\nimport ChevronRightRoundedIcon from \"@material-ui/icons/ChevronRightRounded\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport interface CallBannerProps {}\r\n\r\nexport const useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    paper: {\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: \"white\",\r\n      padding: 16,\r\n      borderRadius: 9,\r\n      position: \"relative\",\r\n      overflow: \"hidden\",\r\n    },\r\n    flex: {\r\n      display: \"flex\",\r\n    },\r\n    textMain: {},\r\n    textSecondary: {\r\n      opacity: \"50%\",\r\n      fontWeight: 400,\r\n    },\r\n    textSecondaryMobile: {\r\n      lineHeight: \"1.2\",\r\n      marginTop: \"4px\",\r\n      fontSize: \"14px\",\r\n    },\r\n  })\r\n);\r\nconst imgStyleMobile: any = {\r\n  position: \"absolute\",\r\n  bottom: \"50%\",\r\n  left: \"0\",\r\n  transform: \"translate(-54%, 50%)\",\r\n};\r\n\r\nconst CallBanner: React.SFC<CallBannerProps> = () => {\r\n  const theme = useTheme();\r\n  const classes = useStyles(theme);\r\n  const { t } = useTranslation();\r\n  const smUp = useMediaQuery((theme: Theme) => theme.breakpoints.up(\"sm\"));\r\n\r\n  const handleClick = () => {\r\n    window.open(\"tel:+1303499-7111\", \"_blank\");\r\n  };\r\n  return (\r\n    <Box mt={4} mb={4}>\r\n      <Paper\r\n        className={classes.paper}\r\n        style={{ cursor: \"pointer\" }}\r\n        elevation={0}\r\n        onClick={handleClick}\r\n      >\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          alignItems=\"center\"\r\n          wrap=\"nowrap\"\r\n        >\r\n          <Grid\r\n            className={classes.flex}\r\n            container\r\n            item\r\n            alignItems=\"center\"\r\n            wrap=\"nowrap\"\r\n          >\r\n            <img src={VirusSmall} style={!smUp ? imgStyleMobile : undefined} />\r\n            <Box mr={2} />\r\n            <Grid item container direction=\"column\" wrap=\"nowrap\">\r\n              <Typography>{t(\"callBanner.title\")}</Typography>\r\n              <Typography\r\n                className={`${classes.textSecondary} ${\r\n                  !smUp && classes.textSecondaryMobile\r\n                }`}\r\n              >\r\n                {t(\"callBanner.subtitle\")}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <ChevronRightRoundedIcon />\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CallBanner;\r\n","import React from \"react\";\r\nimport {\r\n  Paper,\r\n  useTheme,\r\n  Grid,\r\n  Typography,\r\n  makeStyles,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport { useStyles as useCallBannerStyles } from \"./CallBanner\";\r\nimport VirusBig from \"../../assets/images/virus-big.svg\";\r\nimport Hand from \"../../assets/images/hand.svg\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport interface WelcomeBannerProps {}\r\n\r\nconst useStyles = makeStyles({\r\n  papar: {\r\n    position: \"relative\",\r\n    padding: \"24px\",\r\n    overflow: \"hidden\",\r\n  },\r\n  caption: {\r\n    opacity: \"85%\",\r\n  },\r\n});\r\nconst backgroundVirusImg: any = {\r\n  position: \"absolute\",\r\n  top: \"-40px\",\r\n  right: \"0px\",\r\n};\r\n\r\nconst WelcomeBanner: React.SFC<WelcomeBannerProps> = () => {\r\n  const theme = useTheme();\r\n  const callBannerClasses = useCallBannerStyles(theme);\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  return (\r\n    <Paper\r\n      className={`${callBannerClasses.paper} ${classes.papar}`}\r\n      elevation={0}\r\n    >\r\n      <img style={backgroundVirusImg} src={VirusBig} alt=\"virus image\" />\r\n      <Grid item xs={12} sm={10} md={8}>\r\n        <Box height=\"49px\" mb={1}>\r\n          <img src={Hand} alt=\"Hi\" />\r\n        </Box>\r\n        <Typography variant=\"subtitle1\">{t(\"welcomeBanner.title\")}</Typography>\r\n        <Typography variant=\"caption\" className={classes.caption}>\r\n          {t(\"welcomeBanner.subtitle\")}\r\n        </Typography>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default WelcomeBanner;\r\n","import React, { useState, useContext } from \"react\";\r\nimport {\r\n  TableContainer,\r\n  makeStyles,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell as MuiTableCell,\r\n  TableBody,\r\n  Box,\r\n  withStyles,\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Link,\r\n  Theme,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport KeyboardArrowDownRoundedIcon from \"@material-ui/icons/KeyboardArrowDownRounded\";\r\nimport ZoneStatusPin from \"../Search/ZoneStatusPin\";\r\nimport { ZoneStatus } from \"../../types/zone\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getSelectedZoneObjById } from \"../../utils/getSelectedZoneObj\";\r\nimport { StateContext } from \"../../state/StateContext\";\r\nimport { getProperDisplayName } from \"../../utils/getProperDisplayName\";\r\nimport { getChildZones } from \"../../utils/getChildZones\";\r\nimport { ADD_SELECTED_ZONE_ID } from \"../../state/reducers/appReducer\";\r\nimport ChildZonesSkeleton from \"../Skeletons/ChildZones\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    // minWidth: 650,\r\n  },\r\n  showMoreBtn: {\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    borderRadius: 16,\r\n    padding: \"4px 16px\",\r\n    boxShadow: \"unset !important\",\r\n  },\r\n  tableCell: {\r\n    textAlign: \"center\",\r\n    whiteSpace: \"nowrap\",\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\",\r\n  },\r\n  tableCellText: {\r\n    lineHeight: 1,\r\n  },\r\n  skeleton: {\r\n    display: \"inline-block\",\r\n    backgroundColor: \"rgb(245, 247, 253)\",\r\n  },\r\n});\r\n\r\nconst TableCell = withStyles({\r\n  root: {\r\n    borderBottom: \"none\",\r\n    lineHeight: 1.2,\r\n    paddingLeft: (props: { leftmost?: string; rightmost?: string }) =>\r\n      props.leftmost ? \"unset !important\" : \"8px\",\r\n    paddingRight: (props: { leftmost?: string; rightmost?: string }) =>\r\n      props.rightmost ? \"unset !important\" : \"8px\",\r\n  },\r\n})(MuiTableCell);\r\n\r\nexport interface ChildZonesProps {}\r\n\r\nconst ChildZones: React.SFC<ChildZonesProps> = () => {\r\n  const { zones, selectedZoneId, dispatch } = useContext(StateContext);\r\n  const selectedZone = getSelectedZoneObjById(selectedZoneId, zones);\r\n  const classes = useStyles();\r\n  const [numberOfVisibleCells, setNumberOfVisibleCells] = useState(4);\r\n  const { t } = useTranslation();\r\n  const mdUp = useMediaQuery((theme: Theme) => theme.breakpoints.up(\"md\"));\r\n\r\n  const defaultZone = zones.find(\r\n    (zone) => zone?.properties?.alias?.indexOf(\"Uzbekistan\") > -1\r\n  );\r\n  console.log(\"selectedZone\", selectedZone);\r\n  console.log(\"defaultZone\", defaultZone);\r\n\r\n  const childZones = getChildZones(\r\n    selectedZone\r\n      ? selectedZone?.properties?.childZones\r\n      : defaultZone?.properties?.childZones,\r\n    zones\r\n  );\r\n  console.log(\"childZones\", childZones);\r\n  return childZones.length ? (\r\n    <Box mt={4} mb={4}>\r\n      <Box mb={1}>\r\n        <Typography variant=\"subtitle1\">\r\n          {t(\"childZonesTable.title\")}\r\n        </Typography>\r\n      </Box>\r\n      <Grid container spacing={2}>\r\n        <Grid container item>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"caption\">\r\n              {t(\"childZonesTable.zoneName\")}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={2} className={classes.tableCell}>\r\n            <Typography variant=\"caption\" className={classes.tableCellText}>\r\n              {t(\"dataType.infected\")}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={2} className={classes.tableCell}>\r\n            <Typography variant=\"caption\" className={classes.tableCellText}>\r\n              {t(\"dataType.recovered\")}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={2} className={classes.tableCell}>\r\n            <Typography variant=\"caption\" className={classes.tableCellText}>\r\n              {t(\"dataType.dead\")}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        {childZones.map(\r\n          (zone, index: number) =>\r\n            index + 1 <= numberOfVisibleCells && (\r\n              <Grid container item key={zone._id}>\r\n                <Grid\r\n                  item\r\n                  xs={6}\r\n                  style={{\r\n                    overflow: \"hidden\",\r\n                    whiteSpace: \"nowrap\",\r\n                    textOverflow: \"ellipsis\",\r\n                  }}\r\n                >\r\n                  <Box>\r\n                    {mdUp && <ZoneStatusPin status={zone.properties?.status} />}\r\n                    {mdUp && <Box component=\"span\" mr={1} />}\r\n                    <Link\r\n                      variant=\"body1\"\r\n                      component=\"button\"\r\n                      style={{\r\n                        overflow: \"hidden\",\r\n                        textOverflow: \"ellipsis\",\r\n                        whiteSpace: \"nowrap\",\r\n                        textIndent: mdUp ? 0 : 1,\r\n                        width: \"calc(100% - 10px)\",\r\n                        textAlign: \"left\",\r\n                      }}\r\n                      onClick={() => {\r\n                        dispatch({\r\n                          type: ADD_SELECTED_ZONE_ID,\r\n                          payload: zone._id,\r\n                        });\r\n                      }}\r\n                    >\r\n                      {getProperDisplayName(zone)}\r\n                    </Link>\r\n                  </Box>\r\n                </Grid>\r\n                <Grid item xs={2} className={classes.tableCell}>\r\n                  {zone?.properties?.total?.infectedNumber}\r\n                </Grid>\r\n                <Grid item xs={2} className={classes.tableCell}>\r\n                  {zone?.properties?.total?.recoveredNumber}\r\n                </Grid>\r\n                <Grid item xs={2} className={classes.tableCell}>\r\n                  {zone?.properties?.total?.deadNumber}\r\n                </Grid>\r\n              </Grid>\r\n            )\r\n        )}\r\n      </Grid>\r\n      {childZones.length > numberOfVisibleCells && (\r\n        <Box mt={2}>\r\n          <Grid container justify=\"center\">\r\n            <Button\r\n              className={classes.showMoreBtn}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<KeyboardArrowDownRoundedIcon />}\r\n              onClick={() => {\r\n                setNumberOfVisibleCells(childZones.length);\r\n              }}\r\n            >\r\n              {t(\"childZonesTable.seeMore\")}\r\n            </Button>\r\n          </Grid>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  ) : !selectedZone ? (\r\n    <ChildZonesSkeleton mdUp={mdUp} />\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\nexport default ChildZones;\r\n","import { Zone } from \"../types/zone\";\r\n\r\nexport const getChildZones = (\r\n  children: string[] | undefined,\r\n  zones: Zone[]\r\n) => {\r\n  return zones.filter((zone) => children?.includes(zone.properties?.displayName));\r\n};\r\n","import L from \"leaflet\";\r\n\r\nexport const Controlls = (map: any) => {\r\n  const zoomIn: any = L.DomUtil.create(\"div\");\r\n  const zoomOut: any = L.DomUtil.create(\"div\");\r\n  zoomIn.type = zoomOut.type = \"button\";\r\n  zoomIn.title = \"Zoom in\";\r\n  zoomOut.title = \"Zoom out\";\r\n  zoomIn.innerHTML = \"+\";\r\n  zoomOut.innerHTML = \"-\";\r\n\r\n  zoomIn.style.cursor = zoomOut.style.cursor = \"pointer\";\r\n  zoomIn.style.textAlign = zoomOut.style.textAlign = \"center\";\r\n  zoomIn.style.width = zoomOut.style.width = \"52px\";\r\n  zoomIn.style.height = zoomOut.style.height = \"52px\";\r\n  zoomIn.style.borderRadius = zoomOut.style.borderRadius = \"32px\";\r\n  zoomIn.style.background = zoomOut.style.background = \"#ffffff\";\r\n  zoomIn.style.boxShadow = zoomOut.style.boxShadow =\r\n    \"0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)\";\r\n  zoomIn.style.lineHeight = zoomOut.style.lineHeight = \"52px\";\r\n  zoomIn.style.margin = zoomOut.style.margin = \"8px 0\";\r\n  zoomIn.style.fontWeight = zoomOut.style.fontWeight = \"500\";\r\n  zoomIn.style.fontSize = zoomOut.style.fontSize = \"28px\";\r\n  zoomIn.style.fontFamily = zoomOut.style.fontFamily = \"Rubik\";\r\n  zoomIn.style.color = zoomOut.style.color = \"#242b43\";\r\n\r\n  zoomIn.onmouseover = function () {\r\n    zoomIn.style.boxShadow = \"0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)\";\r\n  };\r\n  zoomOut.onmouseover = function () {\r\n    zoomOut.style.boxShadow = \"0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)\";\r\n  };\r\n  zoomIn.onmouseout = function () {\r\n    zoomIn.style.boxShadow = \"0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)\";\r\n  };\r\n  zoomOut.onmouseout = function () {\r\n    zoomOut.style.boxShadow = \"0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)\";\r\n  };\r\n\r\n  zoomIn.onclick = function () {\r\n    map.zoomIn(1);\r\n    console.log(\"+ buttonClicked\");\r\n  };\r\n  zoomOut.onclick = function () {\r\n    map.zoomOut(1);\r\n    console.log(\"- buttonClicked\");\r\n  };\r\n\r\n  const container = L.DomUtil.create(\"div\");\r\n  container.appendChild(zoomIn);\r\n  container.appendChild(zoomOut);\r\n\r\n  return container;\r\n};\r\n","export const getLatLngFromBBox = (bbox: number[] | undefined): [number, number][] => {\r\n  const [minLng, minLat, maxLng, maxLat] = bbox || [];\r\n  return [\r\n    [maxLat, maxLng],\r\n    [minLat, minLng],\r\n  ];\r\n};","import React, { FunctionComponent, useContext, useEffect, useRef } from \"react\";\nimport L, {\n  Map,\n  MapOptions,\n  GeoJSON,\n  Layer,\n  LeafletEvent,\n  LeafletMouseEvent,\n} from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport { Controlls } from \"./Controlls\";\nimport { StateContext } from \"state/StateContext\";\nimport { Zone, ZoneStatus } from \"types/zone\";\nimport { getLatLngFromBBox } from \"utils/getLatLngFromBBox\";\nimport { ADD_SELECTED_ZONE_ID } from \"state/reducers/appReducer\";\nimport getZoneStatusProps from \"utils/getZoneStatusProps\";\nimport { getProperDisplayName } from \"utils/getProperDisplayName\";\nimport { useTranslation } from \"react-i18next\";\nimport { getSelectedZoneObjById } from \"utils/getSelectedZoneObj\";\nimport { Theme, useMediaQuery } from \"@material-ui/core\";\n\nexport interface MapTestProps {\n  closeBottomSheet?: () => void;\n}\n\nconst latInt = 40.92930626579717;\nconst lngInt = 64.61999498705462;\nconst zoomInt = 5;\n\nconst mapOptions: MapOptions = {\n  renderer: L.canvas({ padding: 1 }),\n  zoomControl: false,\n  zoomSnap: 1, // more granular scroll\n  zoomDelta: 1, // zoom change when we use controls\n  minZoom: 4,\n};\n\n\nconst MapTest: FunctionComponent<MapTestProps> = ({ closeBottomSheet }) => {\n  const { zones = [], selectedZoneId, dispatch } = useContext(StateContext);\n  const selectedZone = getSelectedZoneObjById(selectedZoneId, zones);\n  const map = useRef<any>();\n  const geoJson = useRef<GeoJSON>();\n  const selectedLayer = useRef<any>();\n  const mdUp = useMediaQuery((theme: Theme) => theme.breakpoints.up(\"md\"));\n  const { t } = useTranslation();\n\n\n  const layerStyle = (status: ZoneStatus, isHighlighted: boolean = false) => {\n    let fillColor;\n    let fillOpacity;\n\n    switch (status) {\n      case ZoneStatus.DANGEROUS:\n        fillColor = isHighlighted ? \"#FA0303\" : \"#FB3535\";\n        fillOpacity = isHighlighted ? 0.3 : 0.2;\n        break;\n      case ZoneStatus.RISKY:\n        fillColor = isHighlighted ? \"#FAFF00\" : \"#FAFF00\";\n        fillOpacity = isHighlighted ? 0.4 : 0.2;\n        break;\n      case ZoneStatus.SAFE:\n        fillColor = isHighlighted ? \"#23FF00\" : \"#23FD00\";\n        fillOpacity = isHighlighted ? 0.5 : 0.2;\n        break;\n      default:\n        fillColor = \"#23FD00\";\n        fillOpacity = 0.2;\n        break;\n    }\n    return { fillColor, fillOpacity };\n  };\n  const isLayerVisible = (zone: Zone, map: any) => {\n    let isShown;\n    let zoneZoomLevel;\n    // const latLngTest = getLatLngFromBBox(zone?.bbox);\n    // console.log(\"zone.properties.displayName\", zone.properties.displayName);\n    // console.log(\"map.getBoundsZoom(latLng)\", map.getBoundsZoom(latLngTest));\n    if (zone.properties?.childZones?.length) {\n      const latLng = getLatLngFromBBox(zone?.bbox);\n      // console.log(\"latLng\", latLng);\n      zoneZoomLevel = (latLng[0][0] && map.getBoundsZoom(latLng)) || 0;\n      // console.log('zoneZoomLevel', zoneZoomLevel);\n    } else {\n      zoneZoomLevel = 18;\n    }\n\n    const parentZone = zones.find(\n      (z) => z?.properties?.displayName === zone?.properties?.parentZone\n    );\n    const latLng = getLatLngFromBBox(parentZone?.bbox);\n    // console.log('latLng', latLng);\n    const parentZoomLevel =\n      (parentZone && latLng[0][0] && map.getBoundsZoom(latLng)) || 0;\n    // console.log('parentZoomLevel', parentZoomLevel);\n\n    const zoom = map?.getZoom() || 0;\n\n    if (zoom <= zoneZoomLevel && zoom > parentZoomLevel) {\n      if (map.getBounds().overlaps(getLatLngFromBBox(zone.bbox))) {\n        isShown = true;\n      } else {\n        isShown = false;\n      }\n      isShown = true;\n    } else {\n      isShown = false;\n    }\n    return isShown;\n  };\n  const highlightLayer = (layer: any) => {\n    const status = layer.feature?.properties?.status;\n    const { fillColor, fillOpacity } = layerStyle(status, true);\n    layer.setStyle({\n      fillColor: fillColor,\n      fillOpacity: fillOpacity,\n    });\n  };\n  const dehighlightLayer = (layer: any) => {\n    const status = layer.feature?.properties?.status;\n    const { fillColor, fillOpacity } = layerStyle(status, false);\n    layer.setStyle({\n      fillColor: fillColor,\n      fillOpacity: fillOpacity,\n    });\n  };\n  const handleZoneSelect = (feature: Zone) => {\n    dispatch({\n      type: ADD_SELECTED_ZONE_ID,\n      payload: feature._id,\n    });\n  };\n  const filterZonesOnZoom = () => {\n    geoJson.current?.eachLayer((layer: any) => {\n      // console.log(\"geoJson layer\", layer);\n      const isVisible = isLayerVisible(layer.feature, map.current);\n      if (!isVisible) {\n        map.current.removeLayer(layer);\n      } else {\n        map.current.addLayer(layer);\n      }\n      // console.log(\"geoJson isVisible\", isVisible);\n    });\n  };\n\n  useEffect(() => {\n    map.current = L.map(\"map\", mapOptions);\n    const layerOptions: any = {\n      attribution:\n        mdUp ? '&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors': \"\",\n      edgeBufferTiles: 2, // loads tiles outside of view to better x, y scrolling\n    };\n    L.tileLayer(\n      \"http://{s}.tile.osm.org/{z}/{x}/{y}.png\",\n      // \"https://tiles.stadiamaps.com/tiles/osm_bright/{z}/{x}/{y}{r}.png\",\n      layerOptions\n    ).addTo(map.current);\n\n    map.current.setView([latInt, lngInt], zoomInt);\n\n    const controls = L.Control.extend({\n      options: {\n        position: \"bottomright\",\n      },\n      onAdd: Controlls,\n    });\n    mdUp && map.current.addControl(new controls());\n\n    return () => {\n      if (map.current && map.current.remove) {\n        map.current.off();\n        map.current.remove();\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    geoJson.current = L.geoJSON(zones as any, {\n      style: (feat) => {\n        const status = feat?.properties?.status;\n        const { fillColor, fillOpacity } = layerStyle(status);\n\n        return {\n          fillColor: fillColor,\n          fillOpacity: fillOpacity,\n          color: \"#A4A2AE\",\n          weight: 2,\n        };\n      },\n      onEachFeature: (zone, layer: L.Layer) => {\n        let openPopupTimer: NodeJS.Timeout;\n        layer.on({\n          click: (e: LeafletMouseEvent) => {\n            geoJson.current?.resetStyle(selectedLayer.current);\n\n            highlightLayer(e.target);\n            selectedLayer.current = e.target;\n            handleZoneSelect(zone as Zone);\n            e.target.openPopup();\n          },\n          mouseover: (e: LeafletEvent) => {\n            openPopupTimer = setTimeout(() => {\n              e.target.openPopup();\n            }, 1000);\n            highlightLayer(e.target);\n          },\n          mouseout: (e: LeafletEvent) => {\n            clearTimeout(openPopupTimer);\n            if (\n              selectedLayer.current?.feature?._id === e.target?.feature?._id\n            ) {\n            } else {\n              dehighlightLayer(e.target);\n            }\n          },\n        });\n        layer.bindPopup(\n          `\n          <style>\n          .custom-popup-style .leaflet-popup-content-wrapper {\n            background: #FFFFFF;\n            box-shadow: 0px 4px 40px rgba(0, 30, 89, 0.09);\n            border-radius: 11px;\n          }\n          .custom-popup-style .leaflet-popup-tip {\n            box-shadow: 0px 4px 40px rgba(0, 30, 89, 0.09);\n          }\n          .custom-popup-style .title-container {\n            display: flex;\n            align-items: center;\n            margin-bottom: 8px;\n            margin-right: 8px;\n            position: relative;\n          }\n          .custom-popup-style .zone-status-pin {\n            display: inline-block;\n            width: 8px;\n            height: 8px;\n            border-radius: 4px;\n            margin-right: 5px;\n          }\n          .custom-popup-style .zone-name {\n            font-family: Rubik;\n            font-size: 16px;\n            font-weight: 500;\n            line-height: 16px;\n            color: #242B43;\n            margin: 0;\n          }\n          .custom-popup-style .data {\n            font-family: Rubik;\n            font-size: 14px;\n            font-weight: 500;\n            line-height: 20px;\n            margin: 0;\n          }\n          </style>\n          <div class='title-container'>\n            <span class=\"zone-status-pin\" style=\"\n              background-color: ${\n                getZoneStatusProps(zone.properties?.status).textInBlueishBg\n              }\n            \"></span>\n            <h5 class=\"zone-name\">${getProperDisplayName(zone as Zone)}</h5>\n          </div>\n          <p class=\"data infected\" style=\"\n            color: ${getZoneStatusProps(ZoneStatus.RISKY).textInWhiteBg}\n          \">${t(\"dataType.infected\")} ${\n            zone.properties?.total?.infectedNumber\n          }</p>\n          <p class=\"data recovered\" style=\"\n            color: ${getZoneStatusProps(ZoneStatus.SAFE).textInWhiteBg}\n          \">${t(\"dataType.recovered\")} ${\n            zone.properties?.total?.recoveredNumber\n          }</p>\n          <p class=\"data dead\" style=\"\n            color: ${getZoneStatusProps(ZoneStatus.DANGEROUS).textInWhiteBg}\n          \">${t(\"dataType.dead\")} ${zone.properties?.total?.deadNumber}</p>\n          `,\n          {\n            className: \"custom-popup-style\",\n          }\n        );\n      },\n    }).addTo(map.current);\n\n    filterZonesOnZoom();\n\n    map.current.on(\"zoomend\", () => {\n      const zoom = map.current?.getZoom();\n      const latLng = map.current?.getCenter();\n\n      if (latLng?.lat && latLng?.lng && zoom) {\n        if (\"URLSearchParams\" in window) {\n          const queryParam = new URLSearchParams(window.location.search);\n          queryParam.set(\"lat\", JSON.stringify(latLng.lat));\n          queryParam.set(\"lng\", JSON.stringify(latLng.lng));\n          queryParam.set(\"zoom\", JSON.stringify(zoom));\n          queryParam.toString();\n          const newRelativePathQuery =\n            window.location.pathname + \"?\" + queryParam.toString();\n          window.history.pushState(null, \"\", newRelativePathQuery);\n        }\n      }\n      filterZonesOnZoom();\n    });\n    return () => {};\n  }, [zones]);\n\n  useEffect(() => {\n    // console.log(\"selectedZone\", selectedZone);\n    if (selectedZone) {\n      const latLng = getLatLngFromBBox(selectedZone?.bbox);\n      map.current?.flyToBounds(latLng);\n      if (closeBottomSheet) {\n        closeBottomSheet();\n      }\n    }\n  }, [selectedZone]);\n\n  return <div id=\"map\" style={{ width: \"100%\", height: \"100%\" }}></div>;\n};\n\nexport default MapTest;\n","import React, { useEffect, useContext, Suspense } from \"react\";\r\nimport { fetchZones } from \"../api/zones\";\r\nimport { ADD_ZONES } from \"../state/reducers/appReducer\";\r\nimport { StateContext } from \"../state/StateContext\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { getSelectedZoneObjById } from \"../utils/getSelectedZoneObj\";\r\nimport { Zone } from \"../types/zone\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport { lazyPreload } from \"../utils/lazyPreload\";\r\nimport Layout from \"../components/Layout\";\r\nimport Search from \"../components/Search/index\";\r\nimport WelcomeBanner from \"../components/Banners/WelcomeBanner\";\r\nimport ChildZones from \"../components/ChildZonesTable/ChildZones\";\r\nimport CallBanner from \"../components/Banners/CallBanner\";\r\n// import Map from \"../components/Map/Leaflet\";\r\nimport Map from \"../components/Map\";\r\nconst SelectedZoneName = lazyPreload(() => import(/* webpackChunkName: 'SelectedZoneName' */\"../components/SelectedZoneName/SelectedZoneName\"))\r\n// import SelectedZoneName from \"../components/SelectedZoneName/SelectedZoneName\";\r\nconst OverallStat = lazyPreload(() => import(/* webpackChunkName: 'OverallStat' */\"../components/OverallStats/OverallStat\"))\r\n// import OverallStat from \"../components/OverallStats/OverallStat\";\r\nconst Graph = lazyPreload(() => import(/* webpackChunkName: 'Graph' */\"../components/HistoryGraph/Graph\"))\r\n// import Graph from \"../components/HistoryGraph/Graph\";\r\nconst Restrictions = lazyPreload(() => import(/* webpackChunkName: 'Restrictions' */\"../components/Restrictions/Restrictions\"))\r\n// import Restrictions from \"../components/Restrictions/Restrictions\";\r\n\r\nfunction User() {\r\n  const { dispatch, selectedZoneId, zones = [] } = useContext(StateContext);\r\n  const selectedZone = getSelectedZoneObjById(selectedZoneId, zones);\r\n  useEffect(() => {\r\n    fetchZones().then((res: AxiosResponse<Zone[]>) => {\r\n      dispatch({\r\n        type: ADD_ZONES,\r\n        payload: res.data || [],\r\n      });\r\n      console.log('res.data', res.data);\r\n      \r\n      SelectedZoneName.preload()\r\n      OverallStat.preload()\r\n      Graph.preload()\r\n      Restrictions.preload()\r\n    });\r\n    return () => {};\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <Layout\r\n        search={<Search />}\r\n        map={<Map/>}\r\n        mainContent={\r\n          <Suspense fallback={<>Loading...</>}>\r\n            {!selectedZone && <WelcomeBanner />}\r\n            {selectedZone && <SelectedZoneName />}\r\n            {selectedZone && <OverallStat />}\r\n            {selectedZone?.properties?.history && <Graph />}\r\n            <ChildZones />\r\n            <CallBanner />\r\n            {selectedZone && <Restrictions />}\r\n          </Suspense>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","import Axios from \"axios\";\n\nexport const fetchZones = () => {\n  console.log(\"process.env.PUBLIC_URL\", process.env.PUBLIC_URL);\n  const url =\n    process.env.NODE_ENV === \"production\"\n      ? process.env.PUBLIC_URL + \"/api/zones\"\n      : \"http://localhost:4000/api/zones\";\n  return Axios.get(url);\n};\n"],"sourceRoot":""}