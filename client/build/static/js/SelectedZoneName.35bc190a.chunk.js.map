{"version":3,"sources":["components/SelectedZoneName/SelectedZoneName.tsx"],"names":["useStyles","makeStyles","theme","zoneName","marginBottom","badge","display","paddingTop","spacing","paddingBottom","paddingLeft","paddingRight","borderRadius","badgeText","fontWeight","icon","margin","padding","parentZones","verticalAlign","color","message","SelectedZoneName","props","useContext","StateContext","zones","selectedZoneId","selectedZone","getSelectedZoneObjById","getProperDisplayName","zoneStatus","properties","status","t","useTranslation","useTheme","classes","getZoneStatusProps","parentsName","getParents","container","justify","wrap","item","className","variant","fontSize","mr","component","text","style","textInBlueishBg","backgroundColor","bgColor"],"mappings":"mGAAA,+IAYMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,SAAU,CACRC,aAAc,OAEhBC,MAAO,CACLC,QAAS,eACTC,WAAYL,EAAMM,QAAQ,GAC1BC,cAAeP,EAAMM,QAAQ,GAC7BE,YAAaR,EAAMM,QAAQ,GAC3BG,aAAcT,EAAMM,QAAQ,GAC5BI,aAAc,GAEhBC,UAAW,CACTC,WAAY,KAEdC,KAAM,CACJC,OAAQ,EACRC,QAAS,GAEXC,YAAa,CACXC,cAAe,MACfC,MAAO,WAETC,QAAS,CACPJ,QAAS,OAsDEK,UAlD4C,SAACC,GAAW,IAAD,IAClCC,qBAAWC,KAArCC,EAD4D,EAC5DA,MAAOC,EADqD,EACrDA,eACTC,EAAeC,YAAuBF,EAAgBD,GACtDvB,EAAWyB,GAAgBE,YAAqBF,GAChDG,EAAU,OAAGH,QAAH,IAAGA,GAAH,UAAGA,EAAcI,kBAAjB,aAAG,EAA0BC,OACrCC,EAAMC,cAAND,EAEFhC,EAAQkC,cACRC,EAAUrC,EAAUE,GACpB+B,EAASF,GAAcO,YAAmBP,EAAYG,GAEtDK,EAAcX,GAAgBY,YAAWZ,EAAcF,GAE7D,OACE,kBAAC,IAAD,CAAMe,WAAS,EAACC,QAAQ,gBAAgBC,KAAM,eAAgBnC,QAAS,GACpEL,GACC,kBAAC,IAAD,CAAMyC,MAAI,GACR,kBAAC,IAAD,CAAYC,UAAWR,EAAQlC,SAAU2C,QAAQ,MAC9C3C,GAEFoC,GACC,oCACE,kBAAC,IAAD,CAAgBQ,SAAS,QAAQ3B,MAAO,aACxC,kBAAC,IAAD,CAAK4B,GAAI,EAAGC,UAAU,SACtB,kBAAC,IAAD,CAAYJ,UAAWR,EAAQnB,YAAa4B,QAAQ,WACjDP,MAMJ,OAANN,QAAM,IAANA,OAAA,EAAAA,EAAQiB,OACP,kBAAC,IAAD,CAAMN,MAAI,GACR,kBAAC,IAAD,CACEC,UAAWR,EAAQhC,MACnB8C,MAAO,CACL/B,MAAOa,EAAOmB,gBACdC,gBAAiBpB,EAAOqB,UAG1B,kBAAC,IAAD,CAAYR,QAAQ,UAAUD,UAAWR,EAAQxB,WAC9CoB,EAAOiB","file":"static/js/SelectedZoneName.35bc190a.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Typography, makeStyles, useTheme, Grid, Box } from \"@material-ui/core\";\r\nimport getZoneStatusProps from \"../../utils/getZoneStatusProps\";\r\nimport { StateContext } from \"../../state/StateContext\";\r\nimport { getSelectedZoneObjById } from \"../../utils/getSelectedZoneObj\";\r\nimport { getParents } from \"../../utils/getParents\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getProperDisplayName } from \"../../utils/getProperDisplayName\";\r\n\r\nexport interface SelectedZoneNameProps {}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  zoneName: {\r\n    marginBottom: \"4px\",\r\n  },\r\n  badge: {\r\n    display: \"inline-block\",\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n    borderRadius: 5,\r\n  },\r\n  badgeText: {\r\n    fontWeight: 500,\r\n  },\r\n  icon: {\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n  parentZones: {\r\n    verticalAlign: \"top\",\r\n    color: '#8C93B2'\r\n  },\r\n  message: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nconst SelectedZoneName: React.SFC<SelectedZoneNameProps> = (props) => {\r\n  const { zones, selectedZoneId } = useContext(StateContext);\r\n  const selectedZone = getSelectedZoneObjById(selectedZoneId, zones);\r\n  const zoneName = selectedZone && getProperDisplayName(selectedZone);\r\n  const zoneStatus = selectedZone?.properties?.status;\r\n  const { t } = useTranslation();\r\n\r\n  const theme = useTheme();\r\n  const classes = useStyles(theme);\r\n  const status = zoneStatus && getZoneStatusProps(zoneStatus, t);\r\n\r\n  const parentsName = selectedZone && getParents(selectedZone, zones)\r\n\r\n  return (\r\n    <Grid container justify=\"space-between\" wrap={\"wrap-reverse\"} spacing={1}>\r\n      {zoneName && (\r\n        <Grid item>\r\n          <Typography className={classes.zoneName} variant=\"h1\">\r\n            {zoneName}\r\n          </Typography>\r\n          {parentsName && (\r\n            <>\r\n              <LocationOnIcon fontSize=\"small\" color={\"disabled\"} />\r\n              <Box mr={1} component=\"span\" />\r\n              <Typography className={classes.parentZones} variant=\"caption\">\r\n                {parentsName}\r\n              </Typography>\r\n            </>\r\n          )}\r\n        </Grid>\r\n      )}\r\n      {status?.text && (\r\n        <Grid item>\r\n          <Box\r\n            className={classes.badge}\r\n            style={{\r\n              color: status.textInBlueishBg,\r\n              backgroundColor: status.bgColor,\r\n            }}\r\n          >\r\n            <Typography variant=\"caption\" className={classes.badgeText}>\r\n              {status.text}\r\n            </Typography>\r\n          </Box>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SelectedZoneName;\r\n"],"sourceRoot":""}