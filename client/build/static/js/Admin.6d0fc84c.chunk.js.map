{"version":3,"sources":["screens/Admin.tsx"],"names":["MapZones","React","lazy","Graph","Restrictions","HistoryController","ZoneStatusController","RestrictionController","Admin","dispatch","useContext","StateContext","useState","undefined","socket","setSocket","history","useHistory","location","useLocation","useEffect","io","query","token","sessionStorage","on","emit","zones","console","log","type","ADD_ZONES","payload","error","reason","push","pathname","state","from","style","position","zIndex","display","gridTemplateColumns","gridTemplateRows","className"],"mappings":"2MAOMA,EAAWC,IAAMC,MAAK,kBAC1B,wDAGIC,EAAQF,IAAMC,MAAK,kBACvB,sEAGIE,EAAeH,IAAMC,MAAK,kBAC9B,gEAKIG,EAAoBJ,IAAMC,MAAK,kBACnC,4EAKII,EAAuBL,IAAMC,MAAK,kBACtC,sEAKIK,EAAwBN,IAAMC,MAAK,kBACvC,yDA0EaM,UAnEsB,WAAO,IAClCC,EAAaC,qBAAWC,KAAxBF,SADiC,EAEbG,wBAAcC,GAFD,mBAElCC,EAFkC,KAE1BC,EAF0B,KAGnCC,EAAUC,cACVC,EAAWC,cA6BjB,OA5BAC,qBAAU,WACR,IAAMN,EAASO,IAAG,wBAAyB,CACzCC,MAAO,CAAEC,MAAOC,eAAeD,SAEjCR,EAAUD,GACVA,EAAOW,GAAG,WAAW,WACnBX,EAAOY,KAAK,gBACZZ,EAAOW,GAAG,cAAc,SAACE,GACvBC,QAAQC,IAAI,QAASF,GACrBlB,EAAS,CACPqB,KAAMC,IACNC,QAASL,UAIfb,EAAOW,GAAG,iBAAiB,SAACQ,OAC5BnB,EAAOW,GAAG,kBAAkB,SAACQ,OAC7BnB,EAAOW,GAAG,SAAS,SAACS,GACH,yBAAXA,GACFlB,EAAQmB,KAAK,CACXC,SAAU,SACVC,MAAO,CACLC,KAAMpB,EAASkB,iBAKtB,IAED,oCACE,yBACEG,MAAO,CACLC,SAAU,WACVC,OAAQ,GACRC,QAAS,OACTC,oBAAqB,UACrBC,iBAAkB,sBAGpB,yBAAKC,UAAU,OACb,kBAAC7C,EAAD,OAEF,yBAAK6C,UAAU,qBACZ/B,GAAU,kBAACR,EAAD,CAAsBQ,OAAQA,KAE3C,yBAAK+B,UAAU,SACb,kBAAC1C,EAAD,OAEF,yBAAK0C,UAAU,oBACZ/B,GAAU,kBAACT,EAAD,CAAmBS,OAAQA,KAExC,yBAAK+B,UAAU,gBACb,kBAACzC,EAAD,OAEF,yBAAKyC,UAAU,0BACZ/B,GAAU,kBAACP,EAAD,CAAuBO,OAAQA","file":"static/js/Admin.6d0fc84c.chunk.js","sourcesContent":["import io from \"socket.io-client\";\nimport \"leaflet/dist/leaflet.css\";\nimport React, { useEffect, useContext, useState } from \"react\";\nimport { StateContext } from \"../state/StateContext\";\nimport { ADD_ZONES } from \"../state/reducers/appReducer\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n// import MapZones from \"../components/Map/MapZones\";\nconst MapZones = React.lazy(() =>\n  import(/* webpackChunkName: 'MapZones' */ \"../components/Map/MapZones\")\n);\n// import Graph from \"../components/HistoryGraph/Graph\";\nconst Graph = React.lazy(() =>\n  import(/* webpackChunkName: 'Graph' */ \"../components/HistoryGraph/Graph\")\n);\n// import Restrictions from \"../components/Restrictions/Restrictions\";\nconst Restrictions = React.lazy(() =>\n  import(\n    /* webpackChunkName: 'Restrictions' */ \"../components/Restrictions/Restrictions\"\n  )\n);\n// import HistoryController from \"../components/HistoryGraph/HistoryController\";\nconst HistoryController = React.lazy(() =>\n  import(\n    /* webpackChunkName: 'HistoryController' */ \"../components/HistoryGraph/HistoryController\"\n  )\n);\n// import ZoneStatusController from \"../components/SelectedZoneName/ZoneStatusController\";\nconst ZoneStatusController = React.lazy(() =>\n  import(\n    /* webpackChunkName: 'ZoneStatusController' */ \"../components/SelectedZoneName/ZoneStatusController\"\n  )\n);\n// import RestrictionController from \"../components/Restrictions/RestrictionController\";\nconst RestrictionController = React.lazy(() =>\n  import(\n    /* webpackChunkName: 'RestrictionController' */ \"../components/Restrictions/RestrictionController\"\n  )\n);\n\nexport interface AdminProps {}\n\nconst Admin: React.SFC<AdminProps> = () => {\n  const { dispatch } = useContext(StateContext);\n  const [socket, setSocket] = useState<any>(undefined);\n  const history = useHistory();\n  const location = useLocation();\n  useEffect(() => {\n    const socket = io(\"http://localhost:4000\", {\n      query: { token: sessionStorage.token },\n    });\n    setSocket(socket);\n    socket.on(\"connect\", () => {\n      socket.emit(\"initial_data\");\n      socket.on(\"push_zones\", (zones: any) => {\n        console.log('zones', zones);\n        dispatch({\n          type: ADD_ZONES,\n          payload: zones,\n        });\n      });\n    });\n    socket.on(\"connect_error\", (error: any) => {});\n    socket.on(\"internal_error\", (error: any) => {});\n    socket.on(\"error\", (reason: any) => {\n      if (reason === \"Authentication error\") {\n        history.push({\n          pathname: \"/login\",\n          state: {\n            from: location.pathname,\n          },\n        });\n      }\n    });\n  }, []);\n  return (\n    <>\n      <div\n        style={{\n          position: \"relative\",\n          zIndex: 10,\n          display: \"grid\",\n          gridTemplateColumns: \"1fr 1fr\",\n          gridTemplateRows: \"400px 400px 400px\",\n        }}\n      >\n        <div className=\"map\">\n          <MapZones />\n        </div>\n        <div className=\"status-controller\">\n          {socket && <ZoneStatusController socket={socket} />}\n        </div>\n        <div className=\"graph\">\n          <Graph />\n        </div>\n        <div className=\"graph-controller\">\n          {socket && <HistoryController socket={socket} />}\n        </div>\n        <div className=\"restrictions\">\n          <Restrictions />\n        </div>\n        <div className=\"restriction-controller\">\n          {socket && <RestrictionController socket={socket} />}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Admin;\n"],"sourceRoot":""}